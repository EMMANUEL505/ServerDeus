@model HefestoServer.Models.Device

@{
    ViewBag.Title = "New";
}

<h2>New</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Device</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Device_Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Device_Name)
            @Html.ValidationMessageFor(model => model.Device_Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Device_Lat)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Device_Lat)
            @Html.ValidationMessageFor(model => model.Device_Lat)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DEvice_Long)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DEvice_Long)
            @Html.ValidationMessageFor(model => model.DEvice_Long)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Device_Mode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Device_Mode)
            @Html.ValidationMessageFor(model => model.Device_Mode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Device_Status)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Device_Status)
            @Html.ValidationMessageFor(model => model.Device_Status)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Device_Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Device_Email)
            @Html.ValidationMessageFor(model => model.Device_Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Device_Zone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Device_Zone)
            @Html.ValidationMessageFor(model => model.Device_Zone)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<body onload="initMap()">
    <div id="map_canvas"></div>
 
</body>

    <style type="text/css">
        #map_canvas {height:400px;width:460px}
    </style>
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>

    <script type="text/javascript">
        var map;
        var markersArray = [];

        function initMap()
        {
            document.getElementById("Device_Lat").value = 28.633839;
            document.getElementById("DEvice_Long").value = -106.077082;
            var lat = document.getElementById("Device_Lat").value;
            var lng = document.getElementById("DEvice_Long").value;
            var latlng = new google.maps.LatLng(lat, lng);

            var myOptions = {
                zoom: 15,
                center: latlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

            var marker = new google.maps.Marker({
                position: map.getCenter(),
                map: map
            });

            // add marker in markers array
            markersArray.push(marker);

            // add a click event handler to the map object
            google.maps.event.addListener(map, "click", function(event)
            {
                // place a marker
                placeMarker(event.latLng);

                // display the lat/lng in your form's lat/lng fields
                document.getElementById("Device_Lat").value = event.latLng.lat();
                document.getElementById("DEvice_Long").value = event.latLng.lng();
            });

        }
        function placeMarker(location) {
            // first remove all markers if there are any
            deleteOverlays();

            var marker = new google.maps.Marker({
                position: location, 
                map: map
            });

            // add marker in markers array
            markersArray.push(marker);

            //map.setCenter(location);
        }

        // Deletes all markers in the array by removing references to them
        function deleteOverlays() {
            if (markersArray) {
                for (i in markersArray) {
                    markersArray[i].setMap(null);
                }
            markersArray.length = 0;
            }
        }
    </script>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
